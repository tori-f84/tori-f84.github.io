!function(){"use strict";const s=["client/[slug].0caf1880.js","client/index.74d0dad6.js","client/client.63e8ac99.js","client/about.deb9d001.js","client/client.5db09d00.js"].concat(["service-worker-index.html",".DS_Store","CNAME","images/.DS_Store","images/products/.DS_Store","images/products/1/1.jpg","images/products/1/1_thumb.jpg","images/products/1/2.jpg","images/products/1/2_thumb.jpg","images/products/1/3.jpg","images/products/1/3_thumb.jpg","images/products/1/4.jpg","images/products/1/4_thumb.jpg","images/products/1/5.jpg","images/products/1/5_thumb.jpg","images/products/10/1.jpg","images/products/10/1_thumb.jpg","images/products/10/2.jpg","images/products/10/2_thumb.jpg","images/products/2/1.jpg","images/products/2/1_thumb.jpg","images/products/2/2.jpg","images/products/2/2_thumb.jpg","images/products/2/3.jpg","images/products/2/3_thumb.jpg","images/products/2/4.jpg","images/products/2/4_thumb.jpg","images/products/2/5.jpg","images/products/2/5_thumb.jpg","images/products/3/1.jpg","images/products/3/1_thumb.jpg","images/products/4/1.jpg","images/products/4/1_thumb.jpg","images/products/4/2.jpg","images/products/4/2_thumb.jpg","images/products/4/3.jpg","images/products/4/3_thumb.jpg","images/products/4/4.jpg","images/products/4/4_thumb.jpg","images/products/4/5.jpg","images/products/4/5_thumb.jpg","images/products/5/1.jpg","images/products/5/1_thumb.jpg","images/products/5/2.jpg","images/products/5/2_thumb.jpg","images/products/6/1.jpg","images/products/6/1_thumb.jpg","images/products/6/2.jpg","images/products/6/2_thumb.jpg","images/products/7/1.jpg","images/products/7/1_thumb.jpg","images/products/7/2.jpg","images/products/7/2_thumb.jpg","images/products/8/1.jpg","images/products/8/1_thumb.jpg","images/products/8/2.jpg","images/products/8/2_thumb.jpg","images/products/9/1.jpg","images/products/9/1_thumb.jpg","index.css","logo.jpg","logoWithText.jpg","logoWithText.png","paypal_sm.png","tailwind.css"]),t=new Set(s);self.addEventListener("install",t=>{t.waitUntil(caches.open("cache1594637584530").then(t=>t.addAll(s)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",s=>{s.waitUntil(caches.keys().then(async s=>{for(const t of s)"cache1594637584530"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",s=>{if("GET"!==s.request.method||s.request.headers.has("range"))return;const e=new URL(s.request.url);e.protocol.startsWith("http")&&(e.hostname===self.location.hostname&&e.port!==self.location.port||(e.host===self.location.host&&t.has(e.pathname)?s.respondWith(caches.match(s.request)):"only-if-cached"!==s.request.cache&&s.respondWith(caches.open("offline1594637584530").then(async t=>{try{const e=await fetch(s.request);return t.put(s.request,e.clone()),e}catch(e){const p=await t.match(s.request);if(p)return p;throw e}}))))})}();
